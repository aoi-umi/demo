<%@ Template Language="C#"%>
<%@ Import Namespace="System.Collections.Generic" %>

<%@ Register Name="Tools" Template="Tools.cst"MergeProperties="Flase" ExcludeProperties=""%>
<%@ Register Name="Make" Template="Make.cst"MergeProperties="Flase" ExcludeProperties=""%>
<%@ Property Name="SourceDatabase" Type="SchemaExplorer.TableSchemaCollection" Category="数据源"   Description="需要生成的表" %>
<%@ Property Name="MakeTypeList" Type="List<Make.MakeTypeEnum>" Category="生成类型"   Description="生成类型" %>
<%@ Property Name="RemoveTablePrefix" Type="String" Default="t_" DeepLoad="True" Optional="True" Category="移除数据表前缀" 
Description="移除数据表前缀"%>
<%

Tools.DeleteFilesAndFolders("./Output");
var temp = new Make();
SourceDatabase.ForEach(x=>{    
    try{
        var fileName = x.Name;
        var dbName = x.Database.Name;
        if(!string.IsNullOrEmpty(RemoveTablePrefix)){
            if(fileName.StartsWith(RemoveTablePrefix))
                fileName = fileName.Substring(RemoveTablePrefix.Length);
        }
        temp.Table = x;
        MakeTypeList.ForEach(makeType=>{
            try{
                var outputFormat = "./Output/{0}/{1}";
                switch(makeType){
                    case Make.MakeTypeEnum.Procedure:
                        outputFormat = "./Output/{0}/sql/{1}.sql";
                        break;
                    case Make.MakeTypeEnum.Js:
                        outputFormat = "./Output/{0}/js/{1}_auto.js";
                        break;
                }
                temp.MakeType = makeType;
                temp.RenderToFile(string.Format(outputFormat, dbName, fileName), true);
                if(makeType == Make.MakeTypeEnum.Procedure)
                    File.AppendAllText(string.Format("./Output/{0}/sql/_all.sql", dbName), temp.RenderToString());
        %>
<%=string.Format("{0}:{1} {2}", x.Name, makeType, "success")%>
        <%
            }catch(Exception ex){%>
<%=string.Format("{0}:{1}", x.Name, ex.Message)%>
    <%
            }
        });        
    }catch(Exception ex){%>
<%=string.Format("{0}:{1}", x.Name, ex.Message)%>
    <%
    }
});
%>
<script runat="template">

//sql替换特殊字符
/**
DROP FUNCTION IF EXISTS `replace_special_char`;
DELIMITER ;;
CREATE FUNCTION `replace_special_char`(`fun_str` text) RETURNS text CHARSET utf8
BEGIN
    SET fun_str = REPLACE(fun_str, '\\', '\\\\');
    SET fun_str = REPLACE(fun_str, '''', '''''');
    RETURN fun_str;
END
;;
DELIMITER ;
**/

</script>







