<div class="container">
    <% var rowItemClass = 'col-lg-3 col-md-4 col-sm-6 col-xs-12';%>
    <div class="form-group">
        <div class="row my-row">
            <%
            var prefix = '';
            var searchItemList = [{
                text: 'id',
                id:'id',
            },{
                text: 'type',
                id:'type',
            },{
                text: 'type_name',
                id:'type_name',
            },{
                text: 'parent_type',
                id:'parent_type',
            },{
                text: 'level',
                id:'level',
            },];
            for(var i = 0;i< searchItemList.length;i++){
                var item = searchItemList[i];
            %>
            <div class="<%=rowItemClass%>">
                <div class="input-group">
                    <span class="input-group-addon"><%=item.text%></span>
                    <input id="<%=prefix + item.id%>" type="text" class="form-control" />
                </div>
            </div>
            <%}%>
        </div>
        <div class="row my-row">
            <div class="<%=rowItemClass%> col-lg-offset-6 col-md-offset-4">
                <button id="search" class="btn btn-default btn-block">
                    search
                </button>
            </div>
            <div class="<%=rowItemClass%>">
                <button id="add" class="btn btn-default btn-block">
                    add
                </button>
            </div>
        </div>
    </div>
    <table id="list" class="table table-bordered">
        <thead>
            <tr>
                <th class="text-center" colspan="100">mainContentType</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th>id</th><th>type</th><th>type_name</th>
                <th>parent_type</th><th>level</th><th>操作</th>
            </tr>
        </tbody>
        <tbody class="error">
            <tr><td class="text-center" colspan="100" name="errorContent"></td></tr>
        </tbody>
    </table>
    <div id="pager"></div>

    <div>
        <a id="tree" href="javascript:;">tree</a>
        <div>
            <span>root</span>
            <ul class="tree" id="treeList">
            </ul>
            <span>not in root</span>
            <ul class="tree" id="notInRootTreeList">
            </ul>
        </div>
    </div>
</div>
<div id="mainContentTypeSave" data-backdrop="false" role="dialog" tabindex="-1" class="modal fade" style="z-index: 1040">
    <div class="modal-dialog" style="top:100px">
        <div class="modal-content">
            <div class="modal-body">
                <button class="close" type="button" data-dismiss="modal">
                    ×
                </button>
                <h4 name="title" class="modal-title">
                </h4>
            </div>
            <div id="detailContainer" class="modal-body">
            </div>
            <div name="footer" class="modal-body">
                <button name="accept" style="margin: 0 5px" name="btnContent" type="button" class="btn btn-default" id="save">确认</button>
                <button name="cancel" style="margin: 0 5px" name="btnContent" type="button" class="btn btn-default" data-dismiss="modal">取消</button>
            </div>
        </div>
    </div>
</div>
<script type="text/template" id="mainContentTypeSaveTemp">
    <% include ../_template_web/mainContentTypeSaveContent%>
</script>
<script type="text/template" id="mainContentTypeItem">
    <% include ../_template_web/mainContentTypeItem%>
</script>
<script type="text/template" id="mainContentTypeTreeItem">
    <% include ../_template_web/mainContentTypeTreeItem%>
</script>
<script type="text/javascript" src="/js/<%=env%>/my.pager.js?v=<%=version%>"></script>
<script type="text/javascript" src="/js/<%=env%>/module.js?v=<%=version%>"></script>
<script type="text/javascript">
    $(function () {
        var opt = {
            operation: ['query', 'save', 'del', 'detailQuery'],
            queryId: 'search',
            queryItemTempId: 'mainContentTypeItem',
            queryContainerId: 'list',

            detailContainerId: 'detailContainer',
            detailTempId: 'mainContentTypeSaveTemp',

            saveId: 'save',
            saveDefaultModel: {
                id: 0,
                type: '',
                type_name: '',
                parent_type: '',
                level: 0
            },
            addId: 'add',

//            rowClass: 'itemRow',
//            editClass: 'itemEdit',
            interfacePrefix: 'mainContentType',
            queryArgs: [{
                name: 'id',
                dom: $('#id'),
                checkValue: function (val) {
                    if (val && !my.vaild.isInt(val, '001'))
                        return '请输入正确的正整数';
                }
            }, {
                name: 'type',
                dom: $('#type'),
            }, {
                name: 'type_name',
                dom: $('#type_name'),
            }, {
                name: 'parent_type',
                dom: $('#parent_type'),
            }, {
                name: 'level',
                dom: $('#level'),
                checkValue: function (val) {
                    if (val && !my.vaild.isInt(val, '001'))
                        return '请输入正确的正整数';
                }
            }],
            bindEvent: function() {
                $('#tree').on('click', function () {
                    var data = {};
                    var method = 'mainContentTypeQuery';
                    my.interface[method](data).then(function (t) {
                        var rootTree = {};
                        var itemTree = {};
                        $('.tree').empty();
                        var list = _.sortBy(t.list, function(n){
                            return -n.level;
                        });
                        function setTree(tree, parent_type, list) {
                            $(list).each(function (i, item) {
                                if (!itemTree[item.type])
                                    itemTree[item.type] = {item: item, inRoot: false};
                                if (item.parent_type == parent_type) {
                                    itemTree[item.type].inRoot = true;
                                    if (!tree[item.type]) {
                                        tree[item.type] = {
                                            item: item,
                                            child: {}
                                        }
                                    }
                                    setTree(tree[item.type].child, item.type, list);
                                }
                            });
                        }
                        setTree(rootTree, '', list);
                        var temp = $('#mainContentTypeTreeItem').html();
                        function renderTree(leave, treeDom){
                            var leaveDom = $(ejs.render(temp, leave.item));
                            leaveDom.data('item', leave.item);
                            treeDom.append(leaveDom);
                            if(leave.child) {
                                for (var key in leave.child) {
                                    renderTree(leave.child[key], leaveDom.find('.child:eq(0)'));
                                }
                            }
                        }
                        for(var key in rootTree){
                            renderTree(rootTree[key], $('#treeList'));
                        }
                        for(var key in itemTree){
                            var val = itemTree[key];
                            if(!val.inRoot) {
                                val.item.type += '(' + val.item.parent_type + ')';
                                renderTree(val, $('#notInRootTreeList'));
                            }
                        }
                    })
                });

                $(this.queryArgs).each(function(){
                    var item = this;
                    if(item.dom){
                        item.dom.on('blur', function(){
                            var checkRes = extend.dataCheck({list: [item]});
                            if(checkRes.success){
                                $('[data-target="' + checkRes.dom.selector + '"]').hide();
                            }else{
                                extend.msgNotice({target: checkRes.dom.selector, msg: checkRes.desc});
                            }
                        });
                    }
                });
            },
            beforeQuery: function(){
                var list = this.queryArgs;
                var checkRes = extend.dataCheck({list: list});
                if(checkRes.success) {
                    var data = checkRes.model;
                    if (!data.id) data.id = null;
                    if (!data.level) data.level = null;
                }
                return checkRes;
            },
            afterEdit: function (item) {
                $('#mainContentTypeSave [name=title]').html(item.id ? ('修改:' + item.id) : '新增');
                $('#mainContentTypeSave').modal('show');
            },
            beforeSave:function(){
                var list = [{
                    name: 'id',
                    dom: $('#mainContentTypeSave [name=id]'),
                }, {
                    name: 'type',
                    dom: $('#mainContentTypeSave [name=type]'),
                    canNotNull: true,
                }, {
                    name: 'type_name',
                    dom: $('#mainContentTypeSave [name=type_name]'),
                }, {
                    name: 'parent_type',
                    dom: $('#mainContentTypeSave [name=parent_type]'),
                }, {
                    name: 'level',
                    dom: $('#mainContentTypeSave [name=level]'),
                }];
                var checkRes = extend.dataCheck({list: list});
                return checkRes;
            },
            onSaveSuccess: function(t, self){
                extend.msgNotice({
                    type: 1, msg: '保存成功:' + t,
                    btnOptList: [{
                        content: '继续'
                    }, {
                        content: '关闭', cb: function () {
                            $('#mainContentTypeSave').modal('hide');
                        }
                    }]
                });
                self.pager.refresh();
            },
            onDetailQuerySuccess:function (t, self) {
                self.detailRender(t);
                $('#mainContentTypeSave').modal('show');
            }
        };
        var moduleMainContentType = new module(opt);
    });
</script>