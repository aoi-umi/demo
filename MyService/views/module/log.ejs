<div class="container">
    <div class="form-group">
        <% var rowItemClass = 'col-lg-3 col-md-4 col-sm-6 col-xs-12';%>
        <div class="row my-row">
            <%
            var prefix = 'log_';
            var searchItemList = [{
                text: 'id',
                id:'id',
            },{
                text: 'url',
                id:'url',
            },{
                text: 'create_date_s',
                id:'create_date_start',
            },{
                text: 'create_date_e',
                id:'create_date_end',
            },{
                text: 'guid',
                id:'guid',
            },];
            for(var i = 0;i< searchItemList.length;i++){
                var item = searchItemList[i];
            %>
                <div class="<%=rowItemClass%>">
                    <div class="input-group">
                        <span class="input-group-addon"><%=item.text%></span>
                        <input id="<%=prefix + item.id%>" type="text" class="form-control" />
                    </div>
                </div>
            <%}%>
        </div>
        <div class="row my-row">
            <div class="<%=rowItemClass%> col-lg-offset-9 col-md-offset-8 col-sm-offset-6">
                <button id="search" class="btn btn-default btn-block">
                    search
                </button>
            </div>
        </div>
    </div>
    <table id="logList" class="table table-bordered">
        <thead>
            <tr>
                <th class="text-center" colspan="100">log</th>
            </tr>
        </thead>
        <tbody class="error">
            <tr><td class="text-center" colspan="100" name="errorContent"></td></tr>
        </tbody>
    </table>
    <div id="pager"></div>
</div>
<script type="text/template" id="logItemTemp">
    <% include ../_template_web/logItem%>
</script>
<script type="text/javascript" src="/js/<%=env%>/my.pager.js?v=<%=version%>"></script>
<script type="text/javascript" src="/js/<%=env%>/module.js?v=<%=version%>"></script>
<script type="text/javascript">
    $(function () {
        var opt = {
            operation: ['query'],
            queryId: 'search',
            queryItemTempId: 'logItemTemp',
            queryContainerId: 'logList',

            rowClass: 'itemRow',
            interfacePrefix: 'log',

            queryArgs: [{
                name: 'id',
                dom: $('#log_id'),
                checkValue: function (val) {
                    if (val && !val.match(/^[\d]+$/))
                        return '请输入正确的正整数';
                }
            }, {
                name: 'create_date_start',
                dom: $('#log_create_date_start'),
            }, {
                name: 'create_date_end',
                dom: $('#log_create_date_end'),
            }, {
                name: 'url',
                dom: $('#log_url'),
            }, {
                name: 'guid',
                dom: $('#log_guid'),
            }],
            bindEvent: function (self) {
                $('#log_create_date_start').on('click', function () {
                    var datePickerArgs = {
                        el: this,
                        //startDate: '#{%y-30}-01-01',
                        doubleCalendar: true,
                        dateFmt: 'yyyy-MM-dd',
                        minDate: '1900-01-01',
                        maxDate: '#F{$dp.$D(\'log_create_date_end\')}',
                    };
                    WdatePicker(datePickerArgs);
                });
                $('#log_create_date_end').on('click', function () {
                    var datePickerArgs = {
                        el: this,
                        //startDate: minDate || '#{%y-30}-01-01',
                        doubleCalendar: true,
                        dateFmt: 'yyyy-MM-dd',
                        minDate: '#F{$dp.$D(\'log_create_date_start\')||\'1900-01-01\'}',
                        maxDate: '',
                    };
                    WdatePicker(datePickerArgs);
                });

                $('#logList').on('click', '.itemToggle', function () {
                    var dom = $(this);
                    var content = dom.closest('.itemRow').find('.itemConetnt');
                    if (dom.hasClass('dropup')) {
                        dom.removeClass('dropup');
                        content.slideUp();
                    } else {
                        dom.addClass('dropup');
                        content.slideDown();
                    }
                });

                $(this.queryArgs).each(function(){
                    var item = this;
                    if(item.dom){
                        item.dom.on('blur', function(){
                            var checkRes = extend.dataCheck({list: [item]});
                            if(checkRes.success){
                                $('[data-target="' + checkRes.dom.selector + '"]').hide();
                            }else{
                                extend.msgNotice({target: checkRes.dom.selector, msg: checkRes.desc});
                            }
                        });
                    }
                });
            },
            beforeQuery: function(){
                var list = this.queryArgs;
                var checkRes = extend.dataCheck({list: list});
                if(checkRes.success) {
                    var data = checkRes.model;
                    if (!data.id) data.id = null;
                    if (!data.create_date_start) data.create_date_start = null;
                    if (!data.create_date_end) data.create_date_end = null;
                }
                return checkRes;
            }
        };
        var moduleLogList = new module(opt);
    });
</script>